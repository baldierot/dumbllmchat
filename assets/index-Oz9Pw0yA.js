(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))a(c);new MutationObserver(c=>{for(const r of c)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function s(c){const r={};return c.integrity&&(r.integrity=c.integrity),c.referrerPolicy&&(r.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?r.credentials="include":c.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(c){if(c.ep)return;c.ep=!0;const r=s(c);fetch(c.href,r)}})();const ne="dumbllmchat_db",se=1,I="messages";let G;function H(){return new Promise((y,e)=>{if(G)return y(G);const s=indexedDB.open(ne,se);s.onerror=a=>{e("Error opening IndexedDB")},s.onsuccess=a=>{G=a.target.result,y(G)},s.onupgradeneeded=a=>{a.target.result.createObjectStore(I,{keyPath:"id",autoIncrement:!0})}})}async function oe(){const y=await H();return new Promise((e,s)=>{const r=y.transaction([I],"readonly").objectStore(I).getAll();r.onerror=o=>{s("Error getting messages from IndexedDB")},r.onsuccess=o=>{e(o.target.result)}})}async function ae(y){const e=await H();return new Promise((s,a)=>{const o=e.transaction([I],"readwrite").objectStore(I).add(y);o.onerror=l=>{a("Error adding message to IndexedDB")},o.onsuccess=l=>{s(l.target.result)}})}async function re(y){const e=await H();return new Promise((s,a)=>{const o=e.transaction([I],"readwrite").objectStore(I).put(y);o.onerror=l=>{a("Error updating message in IndexedDB")},o.onsuccess=l=>{s(l.target.result)}})}async function ce(y){const e=await H();return new Promise((s,a)=>{const o=e.transaction([I],"readwrite").objectStore(I).delete(y);o.onerror=l=>{a("Error removing message from IndexedDB")},o.onsuccess=l=>{s()}})}async function ie(){const y=await H();return new Promise((e,s)=>{const r=y.transaction([I],"readwrite").objectStore(I).clear();r.onerror=o=>{s("Error clearing messages from IndexedDB")},r.onsuccess=o=>{e()}})}window.db={getMessages:oe,addMessage:ae,updateMessage:re,removeMessage:ce,clearMessages:ie};class de{constructor(){this.models=this.getModels(),this.messages=[],this.currentModelIndex=this.getCurrentModelIndex(),this.init()}async init(){this.messages=await window.db.getMessages()}getModels(){const e=localStorage.getItem("llm_models");return e?JSON.parse(e):[{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent",model:"",nickname:"flash-lite",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:24576},{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",model:"",nickname:"flash",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:24576},{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent",model:"",nickname:"pro",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:32768}]}saveModels(e){this.models=e,localStorage.setItem("llm_models",JSON.stringify(e))}addModel(e){this.models.push(e),this.saveModels(this.models)}updateModel(e,s){this.models[e]=s,this.saveModels(this.models)}removeModel(e){this.models.splice(e,1),this.saveModels(this.models)}getCurrentModel(){return this.models[this.currentModelIndex]}cycleModel(){return this.currentModelIndex=(this.currentModelIndex+1)%this.models.length,this.saveCurrentModelIndex(),this.getCurrentModel()}getCurrentModelIndex(){const e=localStorage.getItem("current_model_index");return e?parseInt(e,10):0}saveCurrentModelIndex(){localStorage.setItem("current_model_index",this.currentModelIndex)}async getMessages(){return this.messages=await window.db.getMessages(),this.messages}async getMessage(e){return this.messages=await window.db.getMessages(),this.messages.find(s=>s.id===e)}async addMessage(e){const s=await window.db.addMessage(e),a={...e,id:s};return this.messages.push(a),a}async updateMessage(e,s,a){const c=await this.getMessage(e);return c.content=s,a&&(c.files=a),await window.db.updateMessage(c),c}async removeMessage(e){await window.db.removeMessage(e),this.messages=this.messages.filter(s=>s.id!==e)}async clearMessages(){await window.db.clearMessages(),this.messages=[]}async sendMessage(e){const s=this.getCurrentModel(),{endpoint:a,apiKey:c,model:r,temperature:o,system_prompt:l,apiSchema:w,useGoogleSearch:M,maxOutputTokens:E,prependSystemPrompt:k,thinkingBudget:x}=s;let S,T=a;if(w==="google"){const u=e.map(g=>{const h=[{text:g.content}];return g.files&&g.files.forEach(m=>{h.push({inline_data:{mime_type:m.type,data:m.data.split(",")[1]}})}),{role:g.sender==="User"?"user":"model",parts:h}});if(k){const g=u[u.length-1];g.role==="user"&&(g.parts[0].text=`${l}

${g.parts[0].text}`)}S={contents:u,generationConfig:{temperature:o,topK:1,topP:1,maxOutputTokens:E||2048,stopSequences:[]},safetySettings:[{category:"HARM_CATEGORY_HARASSMENT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_HATE_SPEECH",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_SEXUALLY_EXPLICIT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_NONE"}]},k||(S.systemInstruction={role:"user",parts:[{text:l}]}),M&&(S.tools=[{google_search:{}}]),x&&(S.generationConfig.thinkingConfig={thinkingBudget:x}),T=a}else{let u;if(k){u=e.map(h=>({role:h.sender.toLowerCase(),content:h.content}));const g=u[u.length-1];g.role==="user"&&(g.content=`${l}

${g.content}`)}else u=[{role:"system",content:l},...e.map(g=>{const h=[{type:"text",text:g.content}];return g.files&&g.files.forEach(m=>{h.push({type:"image_url",image_url:{url:m.data}})}),{role:g.sender.toLowerCase(),content:h}})];S={model:r,messages:u,temperature:o}}try{const u=await fetch(T,{method:"POST",headers:{"Content-Type":"application/json",...w==="openai"&&{Authorization:`Bearer ${c}`},...w==="google"&&{"x-goog-api-key":c}},body:JSON.stringify(S)});if(!u.ok){const m=await u.json().catch(()=>({}));throw new Error(`API Error: ${u.status} ${u.statusText} - ${m.error?.message||"Unknown error"}`)}const g=await u.json();let h;if(w==="google"){const m=g.candidates[0].content;m&&m.parts?h={content:m.parts.map(A=>A.text).join("")}:h={content:"[The model sent an empty response.]"}}else h=g.choices[0]?.message;if(h?.content){const m={sender:"Assistant",content:h.content};return await this.addMessage(m)}else if(h?.tool_calls){const m=h.tool_calls[0],v=m.function.name,A=m.function.arguments,b={sender:"Assistant",content:`The model wants to call the '${v}' tool with the following arguments: ${A}. However, tool execution is not yet implemented.`};return await this.addMessage(b)}else throw new Error("API Error: Invalid response format.")}catch(u){console.error("API call failed:",u);const g={sender:"Error",content:`An error occurred: ${u.message}`};return await this.addMessage(g)}}}window.chatAPI=new de;class le{constructor(e){this.chatContainer=e}appendMessage(e){const s=this.chatContainer.scrollHeight-this.chatContainer.clientHeight<=this.chatContainer.scrollTop+1,a=this.createMessageElement(e);this.chatContainer.appendChild(a),s&&a.scrollIntoView({behavior:"smooth"})}renderMessages(e){this.clear(),e.forEach(s=>{const a=this.createMessageElement(s);this.chatContainer.appendChild(a)})}removeMessage(e){const s=this.chatContainer.querySelector(`[data-id='${e}']`);s&&s.remove()}editMessage(e){const s=this.chatContainer.querySelector(`[data-id='${e.id}']`);if(s){const a=this.createMessageElement(e);s.replaceWith(a)}}clear(){this.chatContainer.innerHTML=""}createMessageElement(e){const s=document.createElement("div");let a="bg-gray-300 dark:bg-gray-700",c="self-start";e.sender==="User"?(a="bg-blue-500 text-white",c="self-end"):e.sender==="Error"&&(a="bg-red-500 text-white"),s.className=`p-3 rounded-lg ${a} w-full ${c} message`,s.dataset.id=e.id;const r=document.createElement("div");if(r.className="message-content",r.innerHTML=marked.parse(e.content,{breaks:!0}),s.appendChild(r),e.files&&e.files.length>0){const o=document.createElement("div");o.className="flex flex-wrap gap-2 mt-2",e.files.forEach(l=>{const w=document.createElement("div");w.className="flex items-center bg-gray-200 dark:bg-gray-600 rounded-lg p-2";const M=document.createElement("span");M.className="mr-2 text-gray-800 dark:text-gray-200",M.textContent=l.name,w.appendChild(M);const E=document.createElement("button");E.textContent="⬇️",E.className="download-file-btn",E.addEventListener("click",()=>{const k=document.createElement("a");k.href=l.data,k.download=l.name,k.click()}),w.appendChild(E),o.appendChild(w)}),s.appendChild(o)}return s.querySelectorAll("pre").forEach(o=>{const l=o.querySelector("code"),w=l.className.split("-")[1]||"",M=document.createElement("div");M.className="code-block-container";const E=document.createElement("div");E.className="code-block-header";const k=document.createElement("span");k.textContent=w,E.appendChild(k);const x=document.createElement("button");x.textContent="Copy",x.className="copy-code-btn",E.appendChild(x),M.appendChild(E),M.appendChild(o.cloneNode(!0)),o.replaceWith(M),hljs.highlightElement(M.querySelector("pre code")),x.addEventListener("click",S=>{S.stopPropagation();const T=l.innerText;navigator.clipboard.writeText(T).then(()=>{x.textContent="Copied!",setTimeout(()=>{x.textContent="Copy"},2e3)},()=>{alert("Failed to copy code.")})})}),e.sender!=="Error"&&s.addEventListener("click",o=>{const l=new CustomEvent("message-selected",{detail:{messageElement:s,x:o.clientX,y:o.clientY}});this.chatContainer.dispatchEvent(l)}),s}}window.ChatView=le;document.addEventListener("DOMContentLoaded",()=>{const y=document.getElementById("cycle-model-btn"),e=document.getElementById("model-nickname"),s=document.getElementById("settings-btn"),a=document.getElementById("chat-container"),c=document.getElementById("resize-handle"),r=document.getElementById("message-input"),o=document.getElementById("send-btn"),l=document.getElementById("settings-modal"),w=document.getElementById("llm-configs-container"),M=document.getElementById("add-model-btn"),E=document.getElementById("save-settings-btn"),k=document.getElementById("close-settings-btn"),x=document.getElementById("clear-chat-btn"),S=document.getElementById("import-settings-btn"),T=document.getElementById("export-settings-btn");document.getElementById("copy-chat-btn");const u=document.querySelector("footer"),g=document.getElementById("attach-file-btn"),h=document.getElementById("attached-files-container"),m=document.getElementById("cancel-edit-btn");let v=[],A=null,_=null;const b=new window.ChatView(a);a.addEventListener("message-selected",t=>{const{messageElement:i,x:n,y:d}=t.detail;_&&O(),_=i,Z(i,n,d)}),document.addEventListener("click",t=>{if(!document.querySelector(".message-controls"))return;const n=t.target.closest("[data-id]"),d=t.target.closest(".message-controls");!n&&!d&&O()});const Z=async(t,i,n)=>{const d=document.createElement("div");d.className="message-controls absolute bg-white dark:bg-gray-800 rounded-lg shadow-lg p-2 flex space-x-2";const p=parseInt(t.dataset.id),C=document.createElement("button");C.textContent="✏️",C.addEventListener("click",async()=>{const N=await window.chatAPI.getMessage(p);r.value=N.content,v=N.files||[],A=p,$(),m.classList.remove("hidden"),o.textContent="💾",O(),r.focus()});const f=document.createElement("button");f.textContent="🗑️",f.addEventListener("click",async()=>{confirm("Are you sure you want to delete this message?")&&(await window.chatAPI.removeMessage(p),b.removeMessage(p)),O()});const P=document.createElement("button");P.textContent="📋",P.addEventListener("click",()=>{navigator.clipboard.writeText(t.textContent).then(()=>{alert("Message copied to clipboard!")},()=>{alert("Failed to copy message.")}),O()});const B=document.createElement("button");B.textContent="🔄️",B.addEventListener("click",async()=>{const N=await window.chatAPI.getMessages(),F=N.findIndex(q=>q.id===p),ee=N[F];let L;ee.sender==="User"?L=N.slice(0,F+1):L=N.slice(0,F),window.chatAPI.messages=L,await window.db.clearMessages();for(const q of L)await window.db.addMessage(q);const te=a.scrollTop;b.renderMessages(L),a.scrollTop=te;const X=L[L.length-1];if(X&&X.sender==="User"){O(),o.disabled=!0;const q={sender:"Assistant",content:"...",id:-1};b.appendMessage(q);const Q=await window.chatAPI.sendMessage(L);b.removeMessage(-1),Q&&b.appendMessage(Q),o.disabled=!1,r.focus()}}),d.appendChild(C),d.appendChild(f),d.appendChild(P),d.appendChild(B),d.style.visibility="hidden",document.body.appendChild(d);const K=d.getBoundingClientRect(),D=window.innerWidth,W=window.innerHeight;let j=i,Y=n;i+K.width>D&&(j=D-K.width-5),n+K.height>W&&(Y=W-K.height-5),j<0&&(j=5),Y<0&&(Y=5),d.style.left=`${j}px`,d.style.top=`${Y}px`,d.style.visibility="visible"},O=()=>{const t=document.querySelector(".message-controls");t&&t.remove(),_&&(_=null)},R=()=>{w.innerHTML="",window.chatAPI.getModels().forEach((t,i)=>{const n=document.createElement("div");n.className="mb-4 p-4 border border-black rounded-lg dark:border-black",n.innerHTML=`
                <div class="flex justify-between items-center mb-2">
                    <h3 class="text-lg font-semibold">${t.nickname}</h3>
                    <button type="button" class="remove-model-btn text-xl" data-index="${i}">➖</button>
                </div>
                <input type="text" value="${t.endpoint}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Endpoint URL">
                <div class="model-name-container" style="display: ${t.apiSchema==="google"?"none":"block"}">
                    <input type="text" value="${t.model}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Model Name">
                </div>
                <input type="text" value="${t.nickname}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Nickname">
                <textarea class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="System Prompt">${t.system_prompt}</textarea>
                <input type="password" value="${t.apiKey||""}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="API Key">
                <input type="number" step="0.1" value="${t.temperature}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Temperature">
                <input type="number" value="${t.maxOutputTokens||""}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Max Output Tokens">
                <input type="number" value="${t.thinkingBudget??""}" class="w-full p-2 mt-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Thinking Budget (tokens)">
                <select class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600 api-schema" placeholder="API Schema">
                    <option value="openai" ${t.apiSchema==="openai"?"selected":""}>OpenAI</option>
                    <option value="google" ${t.apiSchema==="google"?"selected":""}>Google</option>
                </select>
                <div class="google-search-container" style="display: ${t.apiSchema==="google"?"block":"none"}">
                    <div class="flex items-center mt-2">
                        <input type="checkbox" id="google-search-checkbox-${i}" class="mr-2" ${t.useGoogleSearch?"checked":""}>
                        <label for="google-search-checkbox-${i}">Enable Google Search</label>
                    </div>
                    <div class="flex items-center mt-2">
                        <input type="checkbox" id="prepend-system-prompt-checkbox-${i}" class="mr-2" ${t.prependSystemPrompt?"checked":""}>
                        <label for="prepend-system-prompt-checkbox-${i}">Prepend System Prompt</label>
                    </div>
                </div>
            `,w.appendChild(n)}),document.querySelectorAll(".remove-model-btn").forEach(t=>{t.addEventListener("click",i=>{const n=i.target.dataset.index;window.chatAPI.removeModel(n),R()})}),document.querySelectorAll(".api-schema").forEach(t=>{t.addEventListener("change",i=>{const n=i.target.closest(".mb-4"),d=n.querySelector(".google-search-container"),p=n.querySelector(".model-name-container");i.target.value==="google"?(d.style.display="block",p.style.display="none"):(d.style.display="none",p.style.display="block")})})};y.addEventListener("click",()=>{const t=window.chatAPI.cycleModel();e.textContent=t.nickname}),s.addEventListener("click",()=>{R(),l.classList.remove("hidden")}),k.addEventListener("click",()=>{l.classList.add("hidden")}),M.addEventListener("click",()=>{window.chatAPI.addModel({endpoint:"",apiKey:"",model:"",nickname:"New Model",temperature:.7,system_prompt:"You are a helpful assistant.",apiSchema:"openai",maxOutputTokens:2048}),R()}),E.addEventListener("click",t=>{t.preventDefault();const i=Array.from(w.children).map(n=>({endpoint:n.querySelector('input[placeholder="Endpoint URL"]').value,model:n.querySelector(".api-schema").value==="google"?"":n.querySelector('input[placeholder="Model Name"]').value,nickname:n.querySelector('input[placeholder="Nickname"]').value,apiKey:n.querySelector('input[placeholder="API Key"]').value,temperature:parseFloat(n.querySelector('input[placeholder="Temperature"]').value),maxOutputTokens:parseInt(n.querySelector('input[placeholder="Max Output Tokens"]').value,10),system_prompt:n.querySelector("textarea").value,apiSchema:n.querySelector(".api-schema").value,useGoogleSearch:n.querySelector(".api-schema").value==="google"?n.querySelector('input[id^="google-search-checkbox-"]').checked:!1,prependSystemPrompt:n.querySelector(".api-schema").value==="google"?n.querySelector('input[id^="prepend-system-prompt-checkbox-"]').checked:!1,thinkingBudget:n.querySelector(".api-schema").value==="google"?parseInt(n.querySelector('input[placeholder="Thinking Budget (tokens)"]').value,10):null}));window.chatAPI.saveModels(i),l.classList.add("hidden"),e.textContent=window.chatAPI.getCurrentModel().nickname});const $=()=>{h.innerHTML="",v.forEach((p,C)=>{const f=document.createElement("div");f.className="attached-file-item";const P=document.createElement("span");P.textContent=p.name,f.appendChild(P);const B=document.createElement("button");B.className="remove-file-btn",B.textContent="❌",B.addEventListener("click",()=>{v.splice(C,1),$()}),f.appendChild(B),h.appendChild(f)});const d=u.querySelector(".flex-grow").scrollHeight-r.offsetHeight+90;u.offsetHeight<d&&(u.style.height=`${d}px`)};g.addEventListener("click",()=>{const t=document.createElement("input");t.type="file",t.multiple=!0,t.addEventListener("change",i=>{const n=i.target.files;for(let d=0;d<n.length;d++){const p=n[d],C=new FileReader;C.onload=f=>{v.push({name:p.name,type:p.type,data:f.target.result}),$()},C.readAsDataURL(p)}}),t.click()}),o.addEventListener("click",async()=>{const t=r.value.trim();if(t||v.length>0)if(A!==null){const i=await window.chatAPI.updateMessage(A,t,v);b.editMessage(i),A=null,m.classList.add("hidden"),o.textContent="▶️",r.value="",v=[],$()}else{const i={sender:"User",content:t,files:v},n=await window.chatAPI.addMessage(i);b.appendMessage(n),r.value="",v=[],$(),o.disabled=!0;const d={sender:"Assistant",content:"...",id:-1};b.appendMessage(d);const p=await window.chatAPI.sendMessage(await window.chatAPI.getMessages());b.removeMessage(-1),p&&b.appendMessage(p),o.disabled=!1}}),m.addEventListener("click",()=>{r.value="",v=[],A=null,$(),m.classList.add("hidden"),o.textContent="▶️"}),r.addEventListener("keydown",t=>{t.ctrlKey&&t.key==="Enter"&&(t.preventDefault(),o.click())});let U=!1;const z=t=>{U=!0,document.body.style.userSelect="none",document.body.style.cursor="row-resize"},V=t=>{if(U){const i=t.clientY||t.touches&&t.touches[0].clientY;if(i===void 0)return;const n=window.innerHeight-i,f=u.querySelector(".flex-grow").scrollHeight-r.offsetHeight+90;n>=f&&n<=500?u.style.height=`${n}px`:n<f&&(u.style.height=`${f}px`)}},J=()=>{U=!1,document.body.style.userSelect="",document.body.style.cursor=""};c.addEventListener("mousedown",z),document.addEventListener("mousemove",V),document.addEventListener("mouseup",J),c.addEventListener("touchstart",z,{passive:!0}),document.addEventListener("touchmove",V),document.addEventListener("touchend",J),x.addEventListener("click",async()=>{confirm("Are you sure you want to clear the chat?")&&(await window.chatAPI.clearMessages(),b.clear())}),T.addEventListener("click",()=>{const t=window.chatAPI.getModels(),i="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(t,null,2)),n=document.createElement("a");n.setAttribute("href",i),n.setAttribute("download","gemini-chat-settings.json"),document.body.appendChild(n),n.click(),n.remove()}),S.addEventListener("click",()=>{const t=document.createElement("input");t.type="file",t.accept=".json",t.onchange=i=>{const n=i.target.files[0],d=new FileReader;d.onload=p=>{try{const C=p.target.result,f=JSON.parse(C);window.chatAPI.saveModels(f),R(),e.textContent=window.chatAPI.getCurrentModel().nickname,alert("Settings imported successfully!")}catch(C){alert("Error importing settings: "+C.message)}},d.readAsText(n)},t.click()}),(async()=>{const t=window.chatAPI.getCurrentModel();t?e.textContent=t.nickname:(e.textContent="No Model",o.disabled=!0);const i=await window.chatAPI.getMessages();b.renderMessages(i)})()});
