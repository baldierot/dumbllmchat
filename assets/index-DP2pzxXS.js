(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))d(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&d(c)}).observe(document,{childList:!0,subtree:!0});function l(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function d(r){if(r.ep)return;r.ep=!0;const o=l(r);fetch(r.href,o)}})();const ne="dumbllmchat_db",se=1,S="messages";let G;function H(){return new Promise((f,n)=>{if(G)return f(G);const l=indexedDB.open(ne,se);l.onerror=d=>{n("Error opening IndexedDB")},l.onsuccess=d=>{G=d.target.result,f(G)},l.onupgradeneeded=d=>{d.target.result.createObjectStore(S,{keyPath:"id",autoIncrement:!0})}})}async function oe(){const f=await H();return new Promise((n,l)=>{const o=f.transaction([S],"readonly").objectStore(S).getAll();o.onerror=c=>{l("Error getting messages from IndexedDB")},o.onsuccess=c=>{n(c.target.result)}})}async function ae(f){const n=await H();return new Promise((l,d)=>{const c=n.transaction([S],"readwrite").objectStore(S).add(f);c.onerror=w=>{d("Error adding message to IndexedDB")},c.onsuccess=w=>{l(w.target.result)}})}async function re(f){const n=await H();return new Promise((l,d)=>{const c=n.transaction([S],"readwrite").objectStore(S).put(f);c.onerror=w=>{d("Error updating message in IndexedDB")},c.onsuccess=w=>{l(w.target.result)}})}async function ce(f){const n=await H();return new Promise((l,d)=>{const c=n.transaction([S],"readwrite").objectStore(S).delete(f);c.onerror=w=>{d("Error removing message from IndexedDB")},c.onsuccess=w=>{l()}})}async function de(){const f=await H();return new Promise((n,l)=>{const o=f.transaction([S],"readwrite").objectStore(S).clear();o.onerror=c=>{l("Error clearing messages from IndexedDB")},o.onsuccess=c=>{n()}})}window.db={getMessages:oe,addMessage:ae,updateMessage:re,removeMessage:ce,clearMessages:de};class le{constructor(){this.models=this.getModels(),this.messages=[],this.currentModelIndex=this.getCurrentModelIndex(),this.init()}async init(){this.messages=await window.db.getMessages()}getModels(){const n=localStorage.getItem("llm_models");return n?JSON.parse(n):[{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent",model:"",nickname:"flash-lite",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:24576},{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent",model:"",nickname:"flash",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:24576},{endpoint:"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-pro:generateContent",model:"",nickname:"pro",apiKey:"",temperature:.7,maxOutputTokens:null,system_prompt:"You are a helpful assistant.",apiSchema:"google",useGoogleSearch:!0,prependSystemPrompt:!1,thinkingBudget:32768}]}saveModels(n){this.models=n,localStorage.setItem("llm_models",JSON.stringify(n))}addModel(n){this.models.push(n),this.saveModels(this.models)}updateModel(n,l){this.models[n]=l,this.saveModels(this.models)}removeModel(n){this.models.splice(n,1),this.saveModels(this.models)}getCurrentModel(){return this.models[this.currentModelIndex]}cycleModel(){return this.currentModelIndex=(this.currentModelIndex+1)%this.models.length,this.saveCurrentModelIndex(),this.getCurrentModel()}getCurrentModelIndex(){const n=localStorage.getItem("current_model_index");return n?parseInt(n,10):0}saveCurrentModelIndex(){localStorage.setItem("current_model_index",this.currentModelIndex)}async getMessages(){return this.messages=await window.db.getMessages(),this.messages}async addMessage(n){const l=await window.db.addMessage(n);this.messages.push({...n,id:l})}async updateMessage(n,l,d){const r=this.messages[n];r.content=l,d&&(r.files=d),await window.db.updateMessage(r)}async removeMessage(n){const l=this.messages[n];await window.db.removeMessage(l.id),this.messages.splice(n,1)}async clearMessages(){await window.db.clearMessages(),this.messages=[]}async sendMessage(n){const l=this.getCurrentModel(),{endpoint:d,apiKey:r,model:o,temperature:c,system_prompt:w,apiSchema:A,useGoogleSearch:U,maxOutputTokens:F,prependSystemPrompt:q,thinkingBudget:R}=l;let B,K=d;if(A==="google"){const u=n.map(m=>{const h=[{text:m.content}];return m.files&&m.files.forEach(g=>{h.push({inline_data:{mime_type:g.type,data:g.data.split(",")[1]}})}),{role:m.sender==="User"?"user":"model",parts:h}});if(q){const m=u[u.length-1];m.role==="user"&&(m.parts[0].text=`${w}

${m.parts[0].text}`)}B={contents:u,generationConfig:{temperature:c,topK:1,topP:1,maxOutputTokens:F||2048,stopSequences:[]},safetySettings:[{category:"HARM_CATEGORY_HARASSMENT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_HATE_SPEECH",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_SEXUALLY_EXPLICIT",threshold:"BLOCK_NONE"},{category:"HARM_CATEGORY_DANGEROUS_CONTENT",threshold:"BLOCK_NONE"}]},q||(B.systemInstruction={role:"user",parts:[{text:w}]}),U&&(B.tools=[{google_search:{}}]),R&&(B.generationConfig.thinkingConfig={thinkingBudget:R}),K=d}else{let u;if(q){u=n.map(h=>({role:h.sender.toLowerCase(),content:h.content}));const m=u[u.length-1];m.role==="user"&&(m.content=`${w}

${m.content}`)}else u=[{role:"system",content:w},...n.map(m=>{const h=[{type:"text",text:m.content}];return m.files&&m.files.forEach(g=>{h.push({type:"image_url",image_url:{url:g.data}})}),{role:m.sender.toLowerCase(),content:h}})];B={model:o,messages:u,temperature:c}}try{const u=await fetch(K,{method:"POST",headers:{"Content-Type":"application/json",...A==="openai"&&{Authorization:`Bearer ${r}`},...A==="google"&&{"x-goog-api-key":r}},body:JSON.stringify(B)});if(!u.ok){const g=await u.json().catch(()=>({}));throw new Error(`API Error: ${u.status} ${u.statusText} - ${g.error?.message||"Unknown error"}`)}const m=await u.json();let h;if(A==="google"){const g=m.candidates[0].content;g&&g.parts?h={content:g.parts.map(v=>v.text).join("")}:h={content:"[The model sent an empty response.]"}}else h=m.choices[0]?.message;if(h?.content){const g={sender:"Assistant",content:h.content};return this.addMessage(g),g}else if(h?.tool_calls){const g=h.tool_calls[0],P=g.function.name,v=g.function.arguments,x={sender:"Assistant",content:`The model wants to call the '${P}' tool with the following arguments: ${v}. However, tool execution is not yet implemented.`};return this.addMessage(x),x}else throw new Error("API Error: Invalid response format.")}catch(u){console.error("API call failed:",u);const m={sender:"Error",content:`An error occurred: ${u.message}`};return this.addMessage(m),m}}}window.chatAPI=new le;document.addEventListener("DOMContentLoaded",()=>{const f=document.getElementById("cycle-model-btn"),n=document.getElementById("model-nickname"),l=document.getElementById("settings-btn"),d=document.getElementById("chat-container"),r=document.getElementById("resize-handle"),o=document.getElementById("message-input"),c=document.getElementById("send-btn"),w=document.getElementById("settings-modal"),A=document.getElementById("llm-configs-container"),U=document.getElementById("add-model-btn"),F=document.getElementById("save-settings-btn"),q=document.getElementById("close-settings-btn"),R=document.getElementById("clear-chat-btn"),B=document.getElementById("import-settings-btn"),K=document.getElementById("export-settings-btn");document.getElementById("copy-chat-btn");const u=document.querySelector("footer"),m=document.getElementById("attach-file-btn"),h=document.getElementById("attached-files-container"),g=document.getElementById("cancel-edit-btn");let P=null,v=[],T=null;document.addEventListener("click",e=>{if(!document.querySelector(".message-controls"))return;const t=e.target.closest("[data-index]"),s=e.target.closest(".message-controls");!t&&!s&&O()});const x=async()=>{d.innerHTML="",(await window.chatAPI.getMessages()).forEach((a,t)=>{const s=z(a,t);d.appendChild(s)})},z=(e,a)=>{const t=document.createElement("div");let s="bg-gray-300 dark:bg-gray-700",p="self-start";e.sender==="User"?(s="bg-blue-500 text-white",p="self-end"):e.sender==="Error"&&(s="bg-red-500 text-white"),t.className=`p-3 rounded-lg ${s} w-full ${p} message`;const y=document.createElement("div");if(y.className="message-content",y.innerHTML=marked.parse(e.content,{breaks:!0}),t.appendChild(y),e.files&&e.files.length>0){const i=document.createElement("div");i.className="flex flex-wrap gap-2 mt-2",e.files.forEach(E=>{const b=document.createElement("div");b.className="flex items-center bg-gray-200 dark:bg-gray-600 rounded-lg p-2";const M=document.createElement("span");M.className="mr-2 text-gray-800 dark:text-gray-200",M.textContent=E.name,b.appendChild(M);const k=document.createElement("button");k.textContent="⬇️",k.className="download-file-btn",k.addEventListener("click",()=>{const C=document.createElement("a");C.href=E.data,C.download=E.name,C.click()}),b.appendChild(k),i.appendChild(b)}),t.appendChild(i)}return t.dataset.index=a,t.querySelectorAll("pre").forEach(i=>{const E=i.querySelector("code"),b=E.className.split("-")[1]||"",M=document.createElement("div");M.className="code-block-container";const k=document.createElement("div");k.className="code-block-header";const C=document.createElement("span");C.textContent=b,k.appendChild(C);const I=document.createElement("button");I.textContent="Copy",I.className="copy-code-btn",k.appendChild(I),M.appendChild(k),M.appendChild(i.cloneNode(!0)),i.replaceWith(M),hljs.highlightElement(M.querySelector("pre code")),I.addEventListener("click",L=>{L.stopPropagation();const $=E.innerText;navigator.clipboard.writeText($).then(()=>{I.textContent="Copied!",setTimeout(()=>{I.textContent="Copy"},2e3)},()=>{alert("Failed to copy code.")})})}),e.sender!=="Error"&&t.addEventListener("click",i=>{P&&O(),P=t,ee(t,i.clientX,i.clientY)}),t},ee=async(e,a,t)=>{const s=document.createElement("div");s.className="message-controls absolute bg-white dark:bg-gray-800 rounded-lg shadow-lg p-2 flex space-x-2";const p=document.createElement("button");p.textContent="✏️",p.addEventListener("click",async()=>{const L=e.dataset.index,Y=(await window.chatAPI.getMessages())[L];o.value=Y.content,v=Y.files||[],T=L,_(),g.classList.remove("hidden"),c.textContent="💾",O(),o.focus()});const y=document.createElement("button");y.textContent="🗑️",y.addEventListener("click",async()=>{confirm("Are you sure you want to delete this message?")&&(await window.chatAPI.removeMessage(e.dataset.index),await x()),O()});const i=document.createElement("button");i.textContent="📋",i.addEventListener("click",()=>{navigator.clipboard.writeText(e.textContent).then(()=>{alert("Message copied to clipboard!")},()=>{alert("Failed to copy message.")}),O()});const E=document.createElement("button");E.textContent="🔄️",E.addEventListener("click",async()=>{const L=parseInt(e.dataset.index),$=await window.chatAPI.getMessages(),Y=$[L];let N;Y.sender==="User"?N=$.slice(0,L+1):N=$.slice(0,L),window.chatAPI.messages=N,await window.db.clearMessages();for(const Q of N)await window.db.addMessage(Q);await x();const V=N[N.length-1];if(V&&V.sender==="User"){O(),c.disabled=!0;const Z=z({sender:"Assistant",content:"..."},-1);d.appendChild(Z),d.scrollTop=d.scrollHeight;const te=await window.chatAPI.sendMessage(N);d.removeChild(Z),te&&await x(),c.disabled=!1,o.focus()}}),s.appendChild(p),s.appendChild(y),s.appendChild(i),s.appendChild(E),s.style.visibility="hidden",document.body.appendChild(s);const b=s.getBoundingClientRect(),M=window.innerWidth,k=window.innerHeight;let C=a,I=t;a+b.width>M&&(C=M-b.width-5),t+b.height>k&&(I=k-b.height-5),C<0&&(C=5),I<0&&(I=5),s.style.left=`${C}px`,s.style.top=`${I}px`,s.style.visibility="visible"},O=()=>{const e=document.querySelector(".message-controls");e&&e.remove(),P&&(P=null)},j=()=>{A.innerHTML="",window.chatAPI.getModels().forEach((e,a)=>{const t=document.createElement("div");t.className="mb-4 p-4 border border-black rounded-lg dark:border-black",t.innerHTML=`
                <div class="flex justify-between items-center mb-2">
                    <h3 class="text-lg font-semibold">${e.nickname}</h3>
                    <button type="button" class="remove-model-btn text-xl" data-index="${a}">➖</button>
                </div>
                <input type="text" value="${e.endpoint}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Endpoint URL">
                <div class="model-name-container" style="display: ${e.apiSchema==="google"?"none":"block"}">
                    <input type="text" value="${e.model}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Model Name">
                </div>
                <input type="text" value="${e.nickname}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Nickname">
                <textarea class="w-full p-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="System Prompt">${e.system_prompt}</textarea>
                <input type="password" value="${e.apiKey||""}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="API Key">
                <input type="number" step="0.1" value="${e.temperature}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Temperature">
                <input type="number" value="${e.maxOutputTokens||""}" class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Max Output Tokens">
                <input type="number" value="${e.thinkingBudget??""}" class="w-full p-2 mt-2 border rounded dark:bg-gray-700 dark:border-gray-600" placeholder="Thinking Budget (tokens)">
                <select class="w-full p-2 mb-2 border rounded dark:bg-gray-700 dark:border-gray-600 api-schema" placeholder="API Schema">
                    <option value="openai" ${e.apiSchema==="openai"?"selected":""}>OpenAI</option>
                    <option value="google" ${e.apiSchema==="google"?"selected":""}>Google</option>
                </select>
                <div class="google-search-container" style="display: ${e.apiSchema==="google"?"block":"none"}">
                    <div class="flex items-center mt-2">
                        <input type="checkbox" id="google-search-checkbox-${a}" class="mr-2" ${e.useGoogleSearch?"checked":""}>
                        <label for="google-search-checkbox-${a}">Enable Google Search</label>
                    </div>
                    <div class="flex items-center mt-2">
                        <input type="checkbox" id="prepend-system-prompt-checkbox-${a}" class="mr-2" ${e.prependSystemPrompt?"checked":""}>
                        <label for="prepend-system-prompt-checkbox-${a}">Prepend System Prompt</label>
                    </div>
                </div>
            `,A.appendChild(t)}),document.querySelectorAll(".remove-model-btn").forEach(e=>{e.addEventListener("click",a=>{const t=a.target.dataset.index;window.chatAPI.removeModel(t),j()})}),document.querySelectorAll(".api-schema").forEach(e=>{e.addEventListener("change",a=>{const t=a.target.closest(".mb-4"),s=t.querySelector(".google-search-container"),p=t.querySelector(".model-name-container");a.target.value==="google"?(s.style.display="block",p.style.display="none"):(s.style.display="none",p.style.display="block")})})};f.addEventListener("click",()=>{const e=window.chatAPI.cycleModel();n.textContent=e.nickname}),l.addEventListener("click",()=>{j(),w.classList.remove("hidden")}),q.addEventListener("click",()=>{w.classList.add("hidden")}),U.addEventListener("click",()=>{window.chatAPI.addModel({endpoint:"",apiKey:"",model:"",nickname:"New Model",temperature:.7,system_prompt:"You are a helpful assistant.",apiSchema:"openai",maxOutputTokens:2048}),j()}),F.addEventListener("click",e=>{e.preventDefault();const a=Array.from(A.children).map(t=>({endpoint:t.querySelector('input[placeholder="Endpoint URL"]').value,model:t.querySelector(".api-schema").value==="google"?"":t.querySelector('input[placeholder="Model Name"]').value,nickname:t.querySelector('input[placeholder="Nickname"]').value,apiKey:t.querySelector('input[placeholder="API Key"]').value,temperature:parseFloat(t.querySelector('input[placeholder="Temperature"]').value),maxOutputTokens:parseInt(t.querySelector('input[placeholder="Max Output Tokens"]').value,10),system_prompt:t.querySelector("textarea").value,apiSchema:t.querySelector(".api-schema").value,useGoogleSearch:t.querySelector(".api-schema").value==="google"?t.querySelector('input[id^="google-search-checkbox-"]').checked:!1,prependSystemPrompt:t.querySelector(".api-schema").value==="google"?t.querySelector('input[id^="prepend-system-prompt-checkbox-"]').checked:!1,thinkingBudget:t.querySelector(".api-schema").value==="google"?parseInt(t.querySelector('input[placeholder="Thinking Budget (tokens)"]').value,10):null}));window.chatAPI.saveModels(a),w.classList.add("hidden"),n.textContent=window.chatAPI.getCurrentModel().nickname});const _=()=>{h.innerHTML="",v.forEach((p,y)=>{const i=document.createElement("div");i.className="attached-file-item";const E=document.createElement("span");E.textContent=p.name,i.appendChild(E);const b=document.createElement("button");b.className="remove-file-btn",b.textContent="❌",b.addEventListener("click",()=>{v.splice(y,1),_()}),i.appendChild(b),h.appendChild(i)});const s=u.querySelector(".flex-grow").scrollHeight-o.offsetHeight+90;u.offsetHeight<s&&(u.style.height=`${s}px`)};m.addEventListener("click",()=>{const e=document.createElement("input");e.type="file",e.multiple=!0,e.addEventListener("change",a=>{const t=a.target.files;for(let s=0;s<t.length;s++){const p=t[s],y=new FileReader;y.onload=i=>{v.push({name:p.name,type:p.type,data:i.target.result}),_()},y.readAsDataURL(p)}}),e.click()}),c.addEventListener("click",async()=>{const e=o.value.trim();if(e||v.length>0)if(T!==null)await window.chatAPI.updateMessage(T,e,v),T=null,g.classList.add("hidden"),c.textContent="▶️",o.value="",v=[],_(),await x();else{const a={sender:"User",content:e,files:v};await window.chatAPI.addMessage(a),o.value="",v=[],_(),await x(),c.disabled=!0;const s=z({sender:"Assistant",content:"..."},-1);d.appendChild(s),s.scrollIntoView({behavior:"smooth"});const p=await window.chatAPI.sendMessage(await window.chatAPI.getMessages());d.removeChild(s),p&&await x(),c.disabled=!1}}),g.addEventListener("click",()=>{o.value="",v=[],T=null,_(),g.classList.add("hidden"),c.textContent="▶️"}),o.addEventListener("keydown",e=>{e.ctrlKey&&e.key==="Enter"&&(e.preventDefault(),c.click())});let D=!1;const J=e=>{D=!0,document.body.style.userSelect="none",document.body.style.cursor="row-resize"},X=e=>{if(D){const a=e.clientY||e.touches&&e.touches[0].clientY;if(a===void 0)return;const t=window.innerHeight-a,i=u.querySelector(".flex-grow").scrollHeight-o.offsetHeight+90;t>=i&&t<=500?u.style.height=`${t}px`:t<i&&(u.style.height=`${i}px`)}},W=()=>{D=!1,document.body.style.userSelect="",document.body.style.cursor=""};r.addEventListener("mousedown",J),document.addEventListener("mousemove",X),document.addEventListener("mouseup",W),r.addEventListener("touchstart",J,{passive:!0}),document.addEventListener("touchmove",X),document.addEventListener("touchend",W),R.addEventListener("click",async()=>{confirm("Are you sure you want to clear the chat?")&&(await window.chatAPI.clearMessages(),await x())}),K.addEventListener("click",()=>{const e=window.chatAPI.getModels(),a="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(e,null,2)),t=document.createElement("a");t.setAttribute("href",a),t.setAttribute("download","gemini-chat-settings.json"),document.body.appendChild(t),t.click(),t.remove()}),B.addEventListener("click",()=>{const e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=a=>{const t=a.target.files[0],s=new FileReader;s.onload=p=>{try{const y=p.target.result,i=JSON.parse(y);window.chatAPI.saveModels(i),j(),n.textContent=window.chatAPI.getCurrentModel().nickname,alert("Settings imported successfully!")}catch(y){alert("Error importing settings: "+y.message)}},s.readAsText(t)},e.click()}),(async()=>{const e=window.chatAPI.getCurrentModel();e?n.textContent=e.nickname:(n.textContent="No Model",c.disabled=!0),await x()})()});
